/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.poly.it17326.group6.view;

import com.poly.it17326.group6.domainmodel.KhoiLuong;
import com.poly.it17326.group6.domainmodel.ChiTietSP;
import com.poly.it17326.group6.domainmodel.DonViTinh;
import com.poly.it17326.group6.domainmodel.LoaiSP;
import com.poly.it17326.group6.domainmodel.NSX;
import com.poly.it17326.group6.domainmodel.SanPham;
import com.poly.it17326.group6.repository.ChiTietSpRepository;
import com.poly.it17326.group6.response.ChiTietSpResponse_2;
import com.poly.it17326.group6.service.ChiTietSPService;
import com.poly.it17326.group6.service.SanPhamService;
import com.poly.it17326.group6.service.impl.ChiTietSPServiceImpl;
import com.poly.it17326.group6.service.impl.SanPhamServiceIplm;
import java.awt.Frame;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author 123
 */
public class FormSanPham extends javax.swing.JPanel {

    private ChiTietSPService chiTietSPService = new ChiTietSPServiceImpl();
    private ChiTietSpRepository chiTietSpRepository = new ChiTietSpRepository();
    List<ChiTietSpResponse_2> listHD = chiTietSPService.getAllFSP();
    private SanPhamService sanPhamService = new SanPhamServiceIplm();
    //  private FormImport formImport = new FormImport();

    /**
     * Creates new form FormSanPham
     */
    public FormSanPham() {
        initComponents();
        loadCB();
        loadIcon();
        tranghientai = 0;
        loadTableChiTietSP(chiTietSPService.getAllFSP());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int count = 1;
    int tongsoTrang = 1;
    int tranghientai = 0;

    private void loadSP(List<ChiTietSpResponse_2> listS) {
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();
        model.setRowCount(0);
        model.setColumnIdentifiers(new String[]{"Mã SP", "Tên SP", "NSX", "Loại SP", "HSD", "Số lượng tồn", "Đơn giá", "Mã Vạch", "Khối lượng", "Đơn vị tính"});
        int i = 1;
        for (ChiTietSpResponse_2 chiTietSpResponse : listS) {
            model.addRow(new Object[]{chiTietSpResponse.getMa(), chiTietSpResponse.getTen(), chiTietSpResponse.getNsx(), chiTietSpResponse.getLoaiSP(), doiNgay(chiTietSpResponse.getHsd()), chiTietSpResponse.getSoLuongTon(), chiTietSpResponse.getDonGia(), chiTietSpResponse.getMaVach(), chiTietSpResponse.getAnh(), chiTietSpResponse.getDonVi()});
            System.out.println(chiTietSpResponse);
        }

    }

    private String doiNgay(Date d) {
        SimpleDateFormat format = new SimpleDateFormat();
        format.applyPattern("dd-MMM-yyyy");
        String ngayTao = format.format(d);

        return ngayTao;
    }

    private void loadCbLSP() {
        cbLoaiSP.removeAllItems();
        cbTimKiemLSP.removeAllItems();
        cbTimKiemLSP.addItem("Loại sản phẩm");
        for (LoaiSP lsp : chiTietSPService.getListLSp()) {
            cbLoaiSP.addItem(lsp.getTen());
            cbTimKiemLSP.addItem(lsp.getTen());
            System.out.println(lsp.getTen());
        }
    }

    private void loadCbNsx() {
        cbNsx.removeAllItems();
        for (NSX nsx : chiTietSPService.getListNsx()) {
            cbNsx.addItem(nsx.getTen());
        }
    }

    private void loadCbA() {
        cbAnh.removeAllItems();
        for (KhoiLuong A : chiTietSPService.getListA()) {
            cbAnh.addItem(A.getTen());
        }
    }

//
    private void loadCbSp() {
        cbDonVi.removeAllItems();
        for (DonViTinh sp : chiTietSPService.getListSp()) {
            cbDonVi.addItem(sp.getTen());
        }
    }

    private ChiTietSpResponse_2 getCtr() throws ParseException {
        ChiTietSpResponse_2 ctr = new ChiTietSpResponse_2();
        ctr.setTen(txtTenSP.getText());
        ctr.setAnh(cbAnh.getSelectedItem().toString());
        Double gia = Double.parseDouble(txtDonGia.getText());
        ctr.setDonGia(BigDecimal.valueOf(gia));
        Date hsd = jdcHSD.getDate();
        ctr.setHsd(hsd);
        ctr.setSoLuongTon(Integer.parseInt(txtSoLuong.getText()));
        ctr.setNsx(cbNsx.getSelectedItem().toString());
        for (LoaiSP lsp2 : chiTietSPService.getListLSp()) {
            if (lsp2.getId() == (cbDonVi.getSelectedIndex() + 1)) {
                ctr.setLoaiSP(lsp2.getTen());
            }
        }
        for (DonViTinh dv : chiTietSPService.getListSp()) {
            if (dv.getId() == (cbDonVi.getSelectedIndex() + 1)) {
                ctr.setDonVi(dv.getTen());
            }
        }
        return ctr;
    }

    private void loadCB() {
        loadCbA();
        loadCbLSP();
        loadCbNsx();
        loadCbSp();
    }

    private void loadTF(int i) {
        for (ChiTietSP ct : chiTietSpRepository.getAll()) {
            if (ct.getSanPham().getMa().equals(tbSanPham.getValueAt(i, 0))) {
//              cbSanPham.setSelectedItem(ct.getSanPham().getTen());
                txtTenSP.setText(tbSanPham.getValueAt(i, 1).toString());
                cbLoaiSP.setSelectedItem(ct.getLoaiSP().getTen());
                cbNsx.setSelectedItem(ct.getNsx().getTen());
                cbAnh.setSelectedItem(ct.getKhoiLuong().getTen());
                cbDonVi.setSelectedItem(ct.getDonViTinh().getTen());
                txtDonGia.setText(ct.getDonGia().toString());
                jdcHSD.setDate(ct.getHsd());
                txtSoLuong.setText(String.valueOf(ct.getSoLuongTon()));
            }
        }
    }

    private int getSPIdFromSelectedRow() {
        int selectedRowIndex = tbSanPham.getSelectedRow();
        int id = 0;
        for (ChiTietSpResponse_2 ct : chiTietSPService.getAllFSP()) {
            if (ct.getMa().equals(tbSanPham.getValueAt(selectedRowIndex, 0))) {
                id = ct.getId();
            }
        }
        return id;
    }

    private void loadIcon() {
        btnThemSP.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\add_form.png"));
        btnThemAnh.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\add_form.png"));
        btnThemAnh1.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\add_form.png"));
        btnThemLSP.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\add_form.png"));
        btnThemNsx.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\add_form.png"));
        btnThem.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\add_form.png"));
        btnUpdate.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\exchange.png"));
        lbTimKiem.setIcon(new ImageIcon("D:\\Nhom6_PRO1041\\Anh\\search.png"));
    }

    private boolean validateform() {

        Date curent = new Date();
        if (jdcHSD.getDate().before(curent)) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải ở hiện tại hoặc trong tương lai");
            return false;
        }
        return true;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbAnhSP = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cbNsx = new javax.swing.JComboBox<>();
        cbAnh = new javax.swing.JComboBox<>();
        cbLoaiSP = new javax.swing.JComboBox<>();
        btnThemSP = new javax.swing.JButton();
        btnThemNsx = new javax.swing.JButton();
        btnThemLSP = new javax.swing.JButton();
        btnThemAnh = new javax.swing.JButton();
        jdcHSD = new com.toedter.calendar.JDateChooser();
        btnXoa = new javax.swing.JButton();
        txtTenSP = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbDonVi = new javax.swing.JComboBox<>();
        btnThemAnh1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSanPham = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtTimKiemSP = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cbTimKiemLSP = new javax.swing.JComboBox<>();
        lbTimKiem = new javax.swing.JLabel();
        btnImport = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jPanel1.setBackground(new java.awt.Color(226, 215, 214));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanel1.setForeground(new java.awt.Color(102, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(lbAnhSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 170, 120));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 153));
        jLabel4.setText("Loại sản phẩm:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 147, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 153));
        jLabel5.setText("Nhà sản xuất:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 153));
        jLabel6.setText("Đơn giá:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 153));
        jLabel7.setText("Hạn sử dụng:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 153));
        jLabel8.setText("Số lượng:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, -1, -1));
        jPanel1.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 230, 230, -1));
        jPanel1.add(txtDonGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 222, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 153));
        jLabel11.setText("Khối lượng:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, 100, -1));

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(0, 102, 153));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 80, 147, -1));

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 102, 153));
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 140, 147, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 102, 153));
        jLabel12.setText("Sản phẩm:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        cbNsx.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbNsx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbNsx, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 225, -1));

        cbAnh.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbAnh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 230, -1));

        cbLoaiSP.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbLoaiSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 225, -1));

        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });
        jPanel1.add(btnThemSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 47, 38));

        btnThemNsx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNsxActionPerformed(evt);
            }
        });
        jPanel1.add(btnThemNsx, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 70, 47, 38));

        btnThemLSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemLSPActionPerformed(evt);
            }
        });
        jPanel1.add(btnThemLSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 47, 38));

        btnThemAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemAnhActionPerformed(evt);
            }
        });
        jPanel1.add(btnThemAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 120, 47, 38));

        jdcHSD.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(jdcHSD, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 225, -1));

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(0, 102, 103));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 200, 147, 29));
        jPanel1.add(txtTenSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 230, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 153));
        jLabel13.setText("Đơn vị tính:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, 100, -1));

        cbDonVi.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbDonVi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbDonVi, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 180, 230, -1));

        btnThemAnh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemAnh1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnThemAnh1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 170, 47, 38));

        jPanel2.setBackground(new java.awt.Color(226, 215, 214));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanel2.setForeground(new java.awt.Color(0, 102, 153));

        tbSanPham.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbSanPham);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 153));
        jLabel9.setText("Tên sản phẩm");

        txtTimKiemSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemSPKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 153));
        jLabel10.setText("Loại sản phẩm");

        cbTimKiemLSP.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbTimKiemLSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTimKiemLSP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTimKiemLSPItemStateChanged(evt);
            }
        });

        btnImport.setText("Import");
        btnImport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImportMouseClicked(evt);
            }
        });
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(">");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText(">>");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbTimKiemLSP, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jButton3});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiemSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTimKiemLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(68, 68, 68))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1647, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int code = (int) Math.floor(((Math.random() * 899) + 1000));
        if (validateform()) {
            try {
                SanPham sanPham = new SanPham();
                sanPham.setMa("SP" + (chiTietSPService.getAllFSP().size() + 3));
                sanPham.setTen(txtTenSP.getText());
                sanPham.setCreateAt(new Date());
                ChiTietSP chiTietSP = new ChiTietSP();
                for (LoaiSP lsp : chiTietSPService.getListLSp()) {
                    if (lsp.getId() == (cbLoaiSP.getSelectedIndex())-1) {
                        chiTietSP.setLoaiSP(lsp);
                    }
                }
                for (DonViTinh dv : chiTietSPService.getListSp()) {
                    if (dv.getId() == (cbDonVi.getSelectedIndex() + 1)) {
                        chiTietSP.setDonViTinh(dv);
                    }
                }
                chiTietSP.setMaVach(String.valueOf(code));
                for (NSX nsx : chiTietSPService.getListNsx()) {
                    if (nsx.getTen().equals(cbNsx.getSelectedItem().toString())) {
                        chiTietSP.setNsx(nsx);
                    }
                }
                for (KhoiLuong a : chiTietSPService.getListA()) {
                    if (a.getTen().equals(cbAnh.getSelectedItem().toString())) {
                        chiTietSP.setKhoiLuong(a);
                    }
                }
                for (DonViTinh a : chiTietSPService.getListSp()) {
                    if (a.getTen().equals(cbAnh.getSelectedItem().toString())) {
                        chiTietSP.setDonViTinh(a);
                    }
                }
                chiTietSP.setHsd(jdcHSD.getDate());
                double db = Double.parseDouble(txtSoLuong.getText());
                chiTietSP.setSoLuongTon((int) db);
                chiTietSP.setDonGia(new BigDecimal(txtDonGia.getText()));
                sanPham.setChiTietSPs(Arrays.asList(chiTietSP));
                chiTietSP.setSanPham(sanPham);
                List<SanPham> list = sanPhamService.getAll();
                for (SanPham sanPham1 : list) {
                    if (sanPham.getMa().equals(sanPham1.getMa())) {
                        System.out.println("trùng mã sp ");
                        return;
                    }
                }
                if (sanPhamService.save(sanPham, chiTietSP) != null) {
                    loadSP(chiTietSPService.getAllFSP());
                    JOptionPane.showMessageDialog(this, "Suscess");
                } else {
                    JOptionPane.showMessageDialog(this, "Fail");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSanPhamMouseClicked
        // TODO add your handling code here:

        int index = tbSanPham.getSelectedRow();
        loadTF(index);
    }//GEN-LAST:event_tbSanPhamMouseClicked

    private void txtTimKiemSPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemSPKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ArrayList<ChiTietSpResponse_2> listTimKiem = chiTietSPService.getTimKiemFSP(txtTimKiemSP.getText().toString());
            loadSP(listTimKiem);
        }
    }//GEN-LAST:event_txtTimKiemSPKeyPressed

    private void cbTimKiemLSPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTimKiemLSPItemStateChanged
        // TODO add your handling code here: 
        if (evt.getStateChange() == 1) {
            if (cbTimKiemLSP.getSelectedIndex() == 0) {
                loadSP(listHD);
            } else {
                List<ChiTietSpResponse_2> listTimKiem = chiTietSPService.getTimKiemLsp(cbTimKiemLSP.getSelectedItem().toString());
                loadSP(listTimKiem);
            }
        }
    }//GEN-LAST:event_cbTimKiemLSPItemStateChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int code = (int) Math.floor(((Math.random() * 899) + 1000));
        ChiTietSpResponse_2 updatedProduct = new ChiTietSpResponse_2();
        int updatedProductId = getSPIdFromSelectedRow();
        updatedProduct.setId(updatedProductId);
        try {
            SanPham sanPham = new SanPham();
            sanPham.setId(updatedProductId);
            sanPham.setMa("SP" + (chiTietSPService.getAllFSP().size() + 3));
            sanPham.setTen(txtTenSP.getText());
            sanPham.setCreateAt(new Date());
            ChiTietSP chiTietSP = new ChiTietSP();
            for (LoaiSP lsp : chiTietSPService.getListLSp()) {
                if (lsp.getId() == (cbLoaiSP.getSelectedIndex())-1) {
                    chiTietSP.setLoaiSP(lsp);
                }
            }
            for (DonViTinh dv : chiTietSPService.getListSp()) {
                if (dv.getId() == (cbDonVi.getSelectedIndex() + 1)) {
                    chiTietSP.setDonViTinh(dv);
                }
            }
            chiTietSP.setMaVach(String.valueOf(code));
            for (NSX nsx : chiTietSPService.getListNsx()) {
                if (nsx.getTen().equals(cbNsx.getSelectedItem().toString())) {
                    chiTietSP.setNsx(nsx);
                }
            }
            for (KhoiLuong a : chiTietSPService.getListA()) {
                if (a.getTen().equals(cbAnh.getSelectedItem().toString())) {
                    chiTietSP.setKhoiLuong(a);
                }
            }
            for (DonViTinh a : chiTietSPService.getListSp()) {
                if (a.getTen().equals(cbAnh.getSelectedItem().toString())) {
                    chiTietSP.setDonViTinh(a);
                }
            }
            chiTietSP.setHsd(jdcHSD.getDate());
            double db = Double.parseDouble(txtSoLuong.getText());
            chiTietSP.setSoLuongTon((int) db);
            chiTietSP.setDonGia(new BigDecimal(txtDonGia.getText()));
            sanPham.setChiTietSPs(Arrays.asList(chiTietSP));
            chiTietSP.setSanPham(sanPham);
            List<SanPham> list = sanPhamService.getAll();
//            for (SanPham sanPham1 : list) {
//                if (sanPham.getMa().equals(sanPham1.getMa())) {
//                    System.out.println("trùng mã sp ");
//                    return;
//                }
//            }
            updatedProduct = new ChiTietSpResponse_2(chiTietSP);
            if (chiTietSPService.updateSP( updatedProduct)!= null) {
                loadSP(chiTietSPService.getAllFSP());
                JOptionPane.showMessageDialog(this, "Suscess");
            } else {
                JOptionPane.showMessageDialog(this, "Fail");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        // TODO add your handling code here:
        Window wd = SwingUtilities.windowForComponent(this);
        DialogSP dialogSp = new DialogSP((Frame) wd, true);
        dialogSp.setVisible(true);
        loadCB();
    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnThemNsxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNsxActionPerformed
        // TODO add your handling code here:
        Window wd = SwingUtilities.windowForComponent(this);
        DialogNsx dialogNsx = new DialogNsx((Frame) wd, true);
        dialogNsx.setVisible(true);
        loadCB();
    }//GEN-LAST:event_btnThemNsxActionPerformed

    private void btnThemLSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemLSPActionPerformed
        // TODO add your handling code here:
        Window wd = SwingUtilities.windowForComponent(this);
        DialogLSP dialogLSP = new DialogLSP((Frame) wd, true);
        dialogLSP.setVisible(true);
        loadCB();
    }//GEN-LAST:event_btnThemLSPActionPerformed

    private void btnThemAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemAnhActionPerformed
        // TODO add your handling code here:
        Window wd = SwingUtilities.windowForComponent(this);
        DialogAnh dialogAnh = new DialogAnh((Frame) wd, true);
        dialogAnh.setVisible(true);
        loadCB();
    }//GEN-LAST:event_btnThemAnhActionPerformed

    private void btnImportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImportMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnImportMouseClicked

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model1 = (DefaultTableModel) tbSanPham.getModel();

        FileInputStream fileInputStream = null;
        BufferedInputStream bufferedInputStream = null;
        String importt = "D:\\Nhom6_PRO1041\\importSP";
        JFileChooser opFileChooser = new JFileChooser(importt);
        int a = opFileChooser.showOpenDialog(null);

        if (a == JFileChooser.APPROVE_OPTION) {
            try {
                File file = opFileChooser.getSelectedFile();
                fileInputStream = new FileInputStream(file);
                bufferedInputStream = new BufferedInputStream(fileInputStream);
                XSSFWorkbook xSSFWorkbook = new XSSFWorkbook(bufferedInputStream);
                XSSFSheet xSSFSheet = xSSFWorkbook.getSheetAt(0);

                for (int i = 1; i < xSSFSheet.getLastRowNum(); i++) {
                    XSSFRow xSSFRow = xSSFSheet.getRow(i);
                    XSSFCell cellMaSP = xSSFRow.getCell(0);
                    XSSFCell cellTenSP = xSSFRow.getCell(1);
                    XSSFCell cellNsx = xSSFRow.getCell(2);
                    XSSFCell cellLoaiSP = xSSFRow.getCell(3);
                    XSSFCell cellHSD = xSSFRow.getCell(4);
                    XSSFCell cellSoLuong = xSSFRow.getCell(5);
                    XSSFCell cellDonGia = xSSFRow.getCell(6);
                    XSSFCell cellMaVach = xSSFRow.getCell(7);
                    XSSFCell cellAnh = xSSFRow.getCell(8);
                    XSSFCell cellDv = xSSFRow.getCell(9);
                    model1.addRow(new Object[]{cellMaSP, cellTenSP, cellNsx, cellLoaiSP, cellHSD, cellSoLuong, cellDonGia, cellMaVach, cellAnh, cellDv});
                }
                for (int i = 11; i < tbSanPham.getRowCount(); i++) {
                    SanPham sanPham = new SanPham();
                    sanPham.setMa(tbSanPham.getValueAt(i, 0).toString());
                    sanPham.setTen(tbSanPham.getValueAt(i, 1).toString());
                    sanPham.setCreateAt(new Date());
                    ChiTietSP chiTietSP = new ChiTietSP();
                    for (LoaiSP loaiSP : chiTietSPService.getListLSp()) {
                        if (loaiSP.getMa().equals(tbSanPham.getValueAt(i, 3).toString())) {
                            chiTietSP.setLoaiSP(loaiSP);
                        }
                    }
                    for (NSX nsx : chiTietSPService.getListNsx()) {
                        if (nsx.getMa().equals(tbSanPham.getValueAt(i, 2).toString())) {
                            chiTietSP.setNsx(nsx);
                        }
                    }
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MMM-yyyy");
                    String date = tbSanPham.getValueAt(i, 4).toString();
                    LocalDate localDate = LocalDate.parse(date, formatter);
                    Date d = new SimpleDateFormat("yyyy-MM-dd").parse(localDate.toString());
                    chiTietSP.setHsd(d);
                    double db = Double.parseDouble(tbSanPham.getValueAt(i, 5).toString());
                    chiTietSP.setSoLuongTon((int) db);
                    chiTietSP.setDonGia(new BigDecimal(tbSanPham.getValueAt(i, 6).toString()));
                    chiTietSP.setMaVach(tbSanPham.getValueAt(i, 7).toString());
                    for (KhoiLuong anh : chiTietSPService.getListA()) {
                        if (anh.getMa().equals(tbSanPham.getValueAt(i, 8).toString())) {
                            chiTietSP.setKhoiLuong(anh);
                        }
                    }
                    for (DonViTinh ma : chiTietSPService.getListSp()) {
                        if (ma.getMa().equals(tbSanPham.getValueAt(i, 9).toString())) {
                            chiTietSP.setDonViTinh(ma);
                        }
                    }
                    sanPham.setChiTietSPs(Arrays.asList(chiTietSP));
                    chiTietSP.setSanPham(sanPham);
                    List<SanPham> list = sanPhamService.getAll();
                    for (SanPham sanPham1 : list) {
                        if (sanPham.getMa().equals(sanPham1.getMa())) {
                            System.out.println("trùng mã sp ");
                            return;
                        }
                    }

                    sanPhamService.save(sanPham, chiTietSP);
                }
                loadSP(chiTietSPService.getAllFSP());
                JOptionPane.showMessageDialog(null, "Import thành công");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int index = tbSanPham.getSelectedRow();
        String ma = tbSanPham.getValueAt(index, 0).toString();

    }//GEN-LAST:event_btnXoaActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        tranghientai = tongsoTrang - 1;
        loadTableChiTietSP(chiTietSPService.getAllFSP());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        tranghientai++;
        if (tranghientai > tongsoTrang - 1) {
            tranghientai = tongsoTrang - 1;
        }
        loadTableChiTietSP(chiTietSPService.getAllFSP());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        tranghientai--;
        if (tranghientai < 0) {
            tranghientai = 0;
        }
        loadTableChiTietSP(chiTietSPService.getAllFSP());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        tranghientai = 0;
        loadTableChiTietSP(chiTietSPService.getAllFSP());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnThemAnh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemAnh1ActionPerformed
        // TODO add your handling code here:
        Window wd = SwingUtilities.windowForComponent(this);
        DialogDonViTinh dialogNsx = new DialogDonViTinh((Frame) wd, true);
        dialogNsx.setVisible(true);
        loadCB();
    }//GEN-LAST:event_btnThemAnh1ActionPerformed
    public void loadTableChiTietSP(List<ChiTietSpResponse_2> lstChiTietSp) {
        DefaultTableModel dtm1 = (DefaultTableModel) tbSanPham.getModel();
        dtm1.setRowCount(0);
        count = lstChiTietSp.size();
        if (count % 10 == 0) {
            tongsoTrang = count / 10;
        } else {
            tongsoTrang = count / 10 + 1;
        }
        int n = 10 * (tranghientai);
        int m = n + 10;
        if (count % 10 == 0) {
            for (int i = n; i < m; i++) {
                dtm1.addRow(new Object[]{lstChiTietSp.get(i).getMa(),
                    lstChiTietSp.get(i).getTen(),
                    lstChiTietSp.get(i).getNsx(),
                    lstChiTietSp.get(i).getLoaiSP(),
                    doiNgay(lstChiTietSp.get(i).getHsd()),
                    lstChiTietSp.get(i).getSoLuongTon(),
                    lstChiTietSp.get(i).getDonGia(),
                    lstChiTietSp.get(i).getMaVach(),
                    lstChiTietSp.get(i).getAnh(),
                    lstChiTietSp.get(i).getDonVi(),});
            }

        } else {
            if (tranghientai == tongsoTrang - 1) {
                int k = n + count % 10;
                for (int i = n; i < k; i++) {
                    dtm1.addRow(new Object[]{lstChiTietSp.get(i).getMa(),
                        lstChiTietSp.get(i).getTen(),
                        lstChiTietSp.get(i).getNsx(),
                        lstChiTietSp.get(i).getLoaiSP(),
                        doiNgay(lstChiTietSp.get(i).getHsd()),
                        lstChiTietSp.get(i).getSoLuongTon(),
                        lstChiTietSp.get(i).getDonGia(),
                        lstChiTietSp.get(i).getMaVach(),
                        lstChiTietSp.get(i).getAnh(),
                        lstChiTietSp.get(i).getDonVi(),});
                }
            } else {
                for (int i = n; i < m; i++) {
                    dtm1.addRow(new Object[]{lstChiTietSp.get(i).getMa(),
                        lstChiTietSp.get(i).getTen(),
                        lstChiTietSp.get(i).getNsx(),
                        lstChiTietSp.get(i).getLoaiSP(),
                        doiNgay(lstChiTietSp.get(i).getHsd()),
                        lstChiTietSp.get(i).getSoLuongTon(),
                        lstChiTietSp.get(i).getDonGia(),
                        lstChiTietSp.get(i).getMaVach(),
                        lstChiTietSp.get(i).getAnh(),
                        lstChiTietSp.get(i).getDonVi(),});
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemAnh;
    private javax.swing.JButton btnThemAnh1;
    private javax.swing.JButton btnThemLSP;
    private javax.swing.JButton btnThemNsx;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbAnh;
    private javax.swing.JComboBox<String> cbDonVi;
    private javax.swing.JComboBox<String> cbLoaiSP;
    private javax.swing.JComboBox<String> cbNsx;
    private javax.swing.JComboBox<String> cbTimKiemLSP;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcHSD;
    private javax.swing.JLabel lbAnhSP;
    private javax.swing.JLabel lbTimKiem;
    private javax.swing.JTable tbSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiemSP;
    // End of variables declaration//GEN-END:variables
}
